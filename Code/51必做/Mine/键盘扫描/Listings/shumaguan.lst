C51 COMPILER V9.57.0.0   SHUMAGUAN                                                         01/08/2025 03:33:19 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SHUMAGUAN
OBJECT MODULE PLACED IN .\Objects\shumaguan.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE Hardware\shumaguan.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\shumaguan.lst) OBJECT(.\Objects\shumaguan.obj)

line level    source

   1          #include "reg52.h"
   2          #include "delay.h"
   3          #include "shumaguan.h"
   4          
   5          #define uchar unsigned char 
   6                  
   7          unsigned int time;//定义延迟时间
   8          
   9          uchar dis_shumaguan[10]=//共阳极数码管字符0-9
  10          {0xc0,0xf9,0xa4,
  11          0xb0,0x99,0x92,
  12          0x82,0xf8,0x80,0x90};
  13          
  14          unsigned int h=9, m=59, s=50;
  15          //  定义时,分,秒初始值，可直接更改，数码管从这个时间开始
  16          unsigned int count=0;// 计时器中断中用到的变量
  17          
  18          
  19          void Display() {     
  20   1          unsigned int h0 = 0, h1 = 0, m0 = 0, m1 = 0, s0 = 0, s1 = 0;  
  21   1          // 定义变量：h0 = 时的十位, h1 = 时的个位,
  22   1          // m0 = 分的十位, m1 = 分的个位, s0 = 秒的十位, s1 = 秒的个位
  23   1          
  24   1          // 计算时、分、秒的各个位
  25   1          h0 = h / 10;   // 小时除以10，得小时的十位数
  26   1          h1 = h % 10;   // 小时除以10取余，得小时的个位数
  27   1          m0 = m / 10;   // 分钟除以10，得分钟的十位数
  28   1          m1 = m % 10;   // 分钟除以10取余，得分钟的个位数
  29   1          s0 = s / 10;   // 秒钟除以10，得秒钟的十位数
  30   1          s1 = s % 10;   // 秒钟除以10取余，得秒钟的个位数
  31   1          
  32   1          // 显示“10” (日期)
  33   1          P3 = 0xff;     // 解锁
  34   1          P2 = 0x01;     // 开启 WX0
  35   1          P3 = 0x7f;     // 锁存
  36   1          P2 = dis_shumaguan[1];  // 显示数字 1
  37   1          delay_ms(2);   // 延时
  38   1      
  39   1          P3 = 0xff;     // 解锁
  40   1          P2 = 0x02;     // 开启 WX1
  41   1          P3 = 0x7f;     // 锁存
  42   1          P2 = dis_shumaguan[0];  // 显示数字 0
  43   1          delay_ms(2);   // 延时
  44   1          
  45   1          // 显示时间（小时）
  46   1          P3 = 0xff;     // 解锁
  47   1          P2 = 0x04;     // 开启 WX2
  48   1          P3 = 0x7f;     // 锁存
  49   1          P2 = dis_shumaguan[h0];  // 显示小时的十位数
  50   1          delay_ms(2);   // 延时
  51   1          
  52   1          P3 = 0xff;     // 解锁
  53   1          P2 = 0x08;     // 开启 WX3
  54   1          P3 = 0x7f;     // 锁存
C51 COMPILER V9.57.0.0   SHUMAGUAN                                                         01/08/2025 03:33:19 PAGE 2   

  55   1          P2 = dis_shumaguan[h1];  // 显示小时的个位数
  56   1          delay_ms(2);   // 延时
  57   1          
  58   1          // 显示时间（分钟）
  59   1          P3 = 0xff;     // 解锁
  60   1          P2 = 0x10;     // 开启 WX4
  61   1          P3 = 0x7f;     // 锁存
  62   1          P2 = dis_shumaguan[m0];  // 显示分钟的十位数
  63   1          delay_ms(2);   // 延时
  64   1          
  65   1          P3 = 0xff;     // 解锁
  66   1          P2 = 0x20;     // 开启 WX5
  67   1          P3 = 0x7f;     // 锁存
  68   1          P2 = dis_shumaguan[m1];  // 显示分钟的个位数
  69   1          delay_ms(2);   // 延时
  70   1          
  71   1          // 显示时间（秒钟）
  72   1          P3 = 0xff;     // 解锁
  73   1          P2 = 0x40;     // 开启 WX6
  74   1          P3 = 0x7f;     // 锁存
  75   1          P2 = dis_shumaguan[s0];  // 显示秒钟的十位数
  76   1          delay_ms(2);   // 延时
  77   1          
  78   1          P3 = 0xff;     // 解锁
  79   1          P2 = 0x80;     // 开启 WX7
  80   1          P3 = 0x7f;     // 锁存
  81   1          P2 = dis_shumaguan[s1];  // 显示秒钟的个位数
  82   1          delay_ms(2);   // 延时
  83   1      }
  84          
  85          
  86          void shumaguan_init(){
  87   1              TMOD =0x01;
  88   1              TH0 = 0x3C;  // 初值高8位就是65536-计时值50000（50毫秒）
  89   1                                       //= 15536转换成16进制为 3cb0
  90   1              TL0 = 0xB0;  // 高8位为3c， 低8位为b0
  91   1              ET0 =1;      // 开启定时器0
  92   1              EA = 1;      // 开启总中断
  93   1              TR0 = 1;     // 开启定时器
  94   1              
  95   1      }
  96          //void main()
  97          //{
  98          //      TMOD =0x01;
  99          //      TH0 = 0x3C;  // 初值高8位就是65536-计时值50000（50毫秒） = 15536转换成16进制为 3cb0
 100          //      TL0 = 0xB0;  // 高8位为3c， 低8位为b0
 101          //      ET0 =1;      // 开启定时器0
 102          //      EA = 1;      // 开启总中断
 103          //      TR0 = 1;     // 开启定时器
 104          //              
 105          //      while(1)
 106          //      {
 107          //              Display();
 108          //      }       
 109          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    312    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.57.0.0   SHUMAGUAN                                                         01/08/2025 03:33:19 PAGE 3   

   DATA SIZE        =     20      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
