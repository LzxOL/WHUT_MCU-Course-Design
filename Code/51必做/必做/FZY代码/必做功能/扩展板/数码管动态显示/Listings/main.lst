C51 COMPILER V9.54   MAIN                                                                  01/09/2024 16:22:57 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          
   3          #define uchar unsigned char 
   4                  
   5          unsigned int time;//定义延迟时间
   6          
   7          uchar dis[10]=//共阳极数码管字符0-9
   8          {0xc0,0xf9,0xa4,
   9          0xb0,0x99,0x92,
  10          0x82,0xf8,0x80,0x90};
  11          
  12          unsigned int h=9, m=59, s=50;
  13          //  定义时,分,秒初始值，可直接更改，数码管从这个时间开始
  14          unsigned int count=0;// 计时器中断中用到的变量
  15          
  16          //延时函数
  17          void delay(unsigned int t)
  18          {
  19   1              unsigned int i=0, j=0;
  20   1              for(i=0; i<t; i++)
  21   1                      for(j=0; j<120; j++);
  22   1      }
  23          
  24          void Display()
  25          {               
  26   1              unsigned int h0=0,h1=0,m0=0,m1=0,s0=0,s1=0;  
  27   1              // 定义变量 h0=时的十位,h1=时的个位,m0=分的十位，
  28   1              //m1=分的个位,s0=秒的十位， s1=秒的个位
  29   1              h0 = h/10;   //  小时除以10，只取整数部分就正好是小时的十位数
  30   1              h1 = h%10;   //  小时除10取余，正好就是小时的个位数
  31   1              m0 = m/10;       //  分钟除以10，只取整数部分就正好是分钟的十位数
  32   1              m1 = m%10;       //  分钟除10取余，正好就是分钟的个位数
  33   1              s0 = s/10; //  秒钟除以10，只取整数部分就正好是秒钟的十位数
  34   1              s1 = s%10; //  秒钟除10取余，正好就是秒钟的个位数
  35   1              
  36   1              //显示日期“10”
  37   1              P3=0xff;//解锁
  38   1              P2=0x01;//开启WX0
  39   1              P3=0x7f;//锁存
  40   1              P2=dis[1];//1
  41   1              delay(2);//延时
  42   1                      
  43   1              P3=0xff;//解锁
  44   1              P2=0x02;//开启WX1
  45   1              P3=0x7f;//锁存
  46   1              P2=dis[0];//0
  47   1              delay(2);//延时
  48   1              
  49   1              //显示时间时数    
  50   1              P3=0xff;//解锁
  51   1              P2=0x04;//开启WX2
  52   1              P3=0x7f;//锁存
  53   1              P2=dis[h0];//小时的十位数
  54   1              delay(2);//延时
C51 COMPILER V9.54   MAIN                                                                  01/09/2024 16:22:57 PAGE 2   

  55   1                      
  56   1              P3=0xff;//解锁
  57   1              P2=0x08;//开启WX3
  58   1              P3=0x7f;//锁存
  59   1              P2=dis[h1];//小时的个位数
  60   1              delay(2);//延时
  61   1      
  62   1              //显示时间分数
  63   1              P3=0xff;//解锁
  64   1              P2=0x10;//开启WX4
  65   1              P3=0x7f;//锁存
  66   1              P2=dis[m0];//分钟的十位数
  67   1              delay(2);//延时
  68   1                      
  69   1              P3=0xff;//解锁
  70   1              P2=0x20;//开启WX5
  71   1              P3=0x7f;//锁存
  72   1              P2=dis[m1];//分钟的个位数
  73   1              delay(2);//延时
  74   1              
  75   1              //显示时间秒数
  76   1              P3=0xff;//解锁
  77   1              P2=0x40;//开启WX6
  78   1              P3=0x7f;//锁存
  79   1              P2=dis[s0];//秒钟的十位数
  80   1              delay(2);//延时
  81   1                      
  82   1              P3=0xff;//解锁
  83   1              P2=0x80;//开启WX7
  84   1              P3=0x7f;//锁存
  85   1              P2=dis[s1];//秒钟的个位数
  86   1              delay(2);//延时
  87   1      }
  88          
  89          //  时间中断函数
  90          void timer0() interrupt 1{
  91   1              unsigned int i=0;
  92   1              TH0 = 0x3C;     // 初值高8位就是65536-计时值50000（50毫秒） = 15536转换成16进制为 3cb0
  93   1              TL0 = 0xB0;     // 高8位为3c， 低8位为b0
  94   1              count++;                //  这个中断函数每隔50毫秒运行一次，每次count加1
  95   1              if(count==20){  //  如果count等于了20，就是运行了20次X50=1000毫秒=1秒   
  96   2                      s+=1;   // 秒钟加1
  97   2                      count = 0;      // count置0重新计算
  98   2              }
  99   1              if(s==60){   //  秒钟=60
 100   2                      m+=1;           //分钟加1
 101   2                      s=0;            // 秒钟置0从新计算
 102   2              }
 103   1              if(m==60){    // 如果分钟等于60了
 104   2                      h+=1;           // 小时加1
 105   2                      m=0;            // 分钟置0从新计算
 106   2              }
 107   1              if(h==24){      //  如果小时等于24了或是12了
 108   2                      h=0;            //  小时置0从新计算      （后面还可以加天，月， 年）
 109   2              }
 110   1      }
 111          
 112          void main()
 113          {
 114   1              TMOD =0x01;
 115   1              TH0 = 0x3C;  // 初值高8位就是65536-计时值50000（50毫秒） = 15536转换成16进制为 3cb0
 116   1              TL0 = 0xB0;  // 高8位为3c， 低8位为b0
C51 COMPILER V9.54   MAIN                                                                  01/09/2024 16:22:57 PAGE 3   

 117   1              ET0 =1;      // 开启定时器0
 118   1              EA = 1;      // 开启总中断
 119   1              TR0 = 1;     // 开启定时器
 120   1                      
 121   1              while(1)
 122   1              {
 123   2                      Display();
 124   2              }       
 125   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
